{
    "name": "Cup",
    "scopeName": "source.cup",
    "fileTypes": [
        "cup"
    ],
    "repository": {
        "all": {
            "patterns": [
                {
                    "comment": "Comment",
                    "name": "comment.line.number-sign.cup",
                    "match": "#.*"
                },
                {
                    "comment": "Floating-point literal",
                    "name": "constant.numeric.float.cup",
                    "match": "(?<=^|[^a-z])[0-9]+\\s*\\.\\s*[0-9]+"
                },
                {
                    "comment": "Integer literal",
                    "name": "constant.numeric.integer.cup",
                    "match": "(?<=^|[^a-z])[0-9]+"
                },
                {
                    "comment": "Character literal",
                    "name": "string.quoted.single.cup",
                    "match": "'(?:\\\\'|\\\\\\\\|[^'\\\\])*'",
                    "captures": {
                        "0": {
                            "patterns": [
                                {
                                    "name": "keyword.operator.string.cup",
                                    "match": "'"
                                },
                                {
                                    "comment": "Escapes",
                                    "name": "constant.character.escape.cup",
                                    "match": "\\\\['\\\\]"
                                }
                            ]
                        }
                    }
                },
                {
                    "comment": "Interpolated string left",
                    "name": "string.interpolated.cup",
                    "match": "\"[^\"]*(?<=[^\\\\])({)",
                    "captures": { "1": { "name": "keyword.operator.brackets.curly.cup" } }
                },
                {
                    "comment": "Interpolated string right",
                    "name": "string.interpolated.cup",
                    "match": "(})[^\"]*\"",
                    "captures": { "1": { "name": "keyword.operator.brackets.curly.cup" } }
                },
                {
                    "comment": "String literal",
                    "name": "string.quoted.double.cup",
                    "match": "\"(?:\\\\\"|\\\\\\\\|\\\\{|[^\"\\\\])*\"",
                    "captures": {
                        "0": {
                            "patterns": [
                                {
                                    "name": "keyword.operator.string.cup",
                                    "match": "\""
                                },
                                {
                                    "comment": "Escapes",
                                    "name": "constant.character.escape.cup",
                                    "match": "\\\\[\"\\\\{]"
                                }
                            ]
                        }
                    }
                },
                {
                    "comment": "Round brackets",
                    "begin": "\\(",
                    "end": "\\)",
                    "captures": { "0": { "name": "keyword.operator.brackets.round.cup" } },
                    "patterns": [ { "include": "#all" } ]
                },
                {
                    "comment": "Square brackets",
                    "begin": "\\[",
                    "end": "\\]",
                    "captures": { "0": { "name": "keyword.operator.brackets.square.cup" } },
                    "patterns": [ { "include": "#all" } ]
                },
                {
                    "comment": "Logical operators",
                    "name": "keyword.operator.logical.cup",
                    "match": "[\\^&]"
                },
                {
                    "comment": "Arithmetic operators",
                    "name": "keyword.operator.math.cup",
                    "match": "[+\\-*\\/%]"
                },
                {
                    "comment": "Comparison operators",
                    "name": "keyword.operator.comparison.cup",
                    "match": "==|!=|<|>|<=|>="
                },
                {
                    "comment": "Assignment operators",
                    "name": "keyword.operator.assignment.cup",
                    "match": "=|%=|\\+=|-=|\\*=|\\/="
                },
                {
                    "comment": "Other operators",
                    "name": "keyword.operator.other.cup",
                    "match": "[,;:@_|~$!?]"
                },
                {
                    "comment": "Control keywords",
                    "name": "keyword.control.cup",
                    "match": "(?<=^|[^a-z])(if|elif|else|loop|ret|jump|try|def)(?=$|[^a-z])"
                },
                {
                    "comment": "Other keywords",
                    "name": "keyword.other.cup",
                    "match": "(?<=^|[^a-z])(arg|use|as)(?=$|[^a-z])"
                },
                {
                    "comment": "Type name",
                    "name": "entity.name.type.cup",
                    "match": "(?<=^|[^a-z])[A-Z][a-zA-Z0-9]*(?=$|[^a-z])"
                },
                {
                    "comment": "Variable name",
                    "name": "variable.other.cup",
                    "match": "(?<=^|[^a-z])[a-z][a-zA-Z0-9]*(?=$|[^a-z])"
                }
            ]
        }
    },
    "patterns": [ { "include": "#all" } ]
}